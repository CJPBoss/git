learning git:
1.setup
    git config --global user.name <Your Name>           //set user's name
    git config --global user.email "<email@example.com>"  //set user's email
 
2.usage
    basic
        git init                    //initialize a git repository
        git add <file>              //add the file to stage
        git commit -m <message>     //commit all the files in stage to repository
    info
        git status                  //show the status of repository
        git diff                    //show the different between the files in Working Directory and repository
    reset
        git log                     //show the log of commit 
            git log --pretty=oneline
        git reset --hard HEAD^      //per version
        git reset --hard HEAD^^     //per*(|^|) version
        git reset --hard HEAD~n     //per*n version
        git reset --hard <commit id>//reset to the version of commit id
        git reflog                  //show the log of your git command
        
        git checkout -- <file.name>
            1.file didn't add to stage: change to the file in repository
            2.file have added to stage: change to the file in stage
        git reset HEAD <file.name>  //cancel the file in stage
            
        git rm file.name            //delete the file in repository.//later should commit

3.remote
    create ssh key
        ssh-keygen -t rsa -C "pydalao@gmail.com"
    associate local repository to the github
        git remote add origin git@github.com:CJPBoss/<repository name>.git
    push master to the remote repository
        git push origin master      //add '-u' before origin when first use
    clone the remote repository 
        git clone git@github.com:CJPBoss/<repository name>.git

4.branch
    create
        git checkout -b dev         //create a new branch called 'dev' and switch to it
                                    //the same as: next 2 command
        git branch dev              //create dev
        git checkout dev            //switch to dev
        
        git branch                  //show the branch status
        git merge dev               //merge the 'dev' branch to current branch
        git branch -d dev           //delete dev branch
            if merge 2 files but have conflict, must fix the conflict in files and then add, commit
        git log --graph --abbrev-commit --pretty=oneline
                                    //graph log
        
        git stash                   //save the working directory 
        git stash list              //show the saved files
        git stash apply             //restore the working directory
        git stash drop              //drop the stash's files
        git stash pop               //restore and drop
        
        git remote -v               //show the remote repository's info
        git push origin branch-name //push local branch to remote repository
        git pull                    //fetch the branch from remote repository
        git checkout -b branch-name origin/branch-name
                                    //create a branch associate to the remote repository
        git branch --set-upstream branch-name origin/branch-name
                                    //associate local branch to remote repository branch
        
        